//2강
//cout == console out meaning
//cin == console in java의 Scanner System.in 이라 생각하면 편함
//endl == end of line 의 약어 이 문구를 붙이면 enter가 쳐진다.
//3강
//네임스페이스(namespace) == 관련있는 것끼리 모여있는 공간 , 동일 변수명, 동일 함수명의 충돌을 방지하기 위해 존재
//네임스페이스(namespace)의 사용은 using을 앞에 붙이고 사용하며, 함수, 식별자만 따로 불러서 사용할 수 있음
//네임스페이스(namespace)::함수명();
//네임스페이스(namespace)::식별자 = 10;
//using namespace std == 기본적인 namespace를 std로 사용하겠다고 선언하는것
//4강
//함수오버로딩(function overloading)
//오버로딩의 특징
//1.함수명이 같아야 함
//2.매개변수의 수가 다르거나 아니면 그 매개변수의 수가 같고 자료형이 달라야만 한다.
//3.함수의 반환형은 같아도 되고, 달라도 가능하다.
//5강
//new == 힙 영역에 메모리 공간을 할당할 수 있게 도와주는 함수
//delete == 함수 호출시 할당되었던 메모리 공간을 전부 해제할수 있게 도와주는 함수
//주의할점 : 동적 할당된 객체의 배열을 소멸시킬때는 반드시 변수명 앞에 배열기호([])를 작성해야 함, 만약에 3행과 같이 소멸시키신다면, 메모리 누수가 발생한다.
//6강
//구조체 내부에 접근 제어자 사용이 가능하다.
//접근제어자는 public, protected, private세가지가 있다. 작성하지 않으면 기본적으로 public으로 인식한다.
//private로 선언시에는 변수의 값 변이 직접적으로는 불가능하다.
